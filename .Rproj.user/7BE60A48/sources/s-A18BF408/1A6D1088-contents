---
title: 'Project 2: Modeling, Testing, and Predicting'
author: "SDS348 Fall 2019"
date: ''
output:
  pdf_document:
    toc: yes
  html_document:
    toc: yes
    toc_float:
      collapsed: no
      smooth_scroll: yes
---

```{r setup, include=FALSE}
library(knitr)
hook_output = knit_hooks$get('output')
knit_hooks$set(output = function(x, options) {
  # this hook is used only when the linewidth option is not NULL
  if (!is.null(n <- options$linewidth)) {
    x = knitr:::split_lines(x)
    # any lines wider than n should be wrapped
    if (any(nchar(x) > n)) x = strwrap(x, width = n)
    x = paste(x, collapse = '\n')
  }
  hook_output(x, options)
})

knitr::opts_chunk$set(echo = TRUE, eval = TRUE,fig.align="center",warning=FALSE,message=FALSE,fig.width=8, fig.height=5, linewidth=60)
options(tibble.width = 100,width = 100)
library(tidyverse)
library(MASS)
library(ggplot2)
library(tidyr)
library(dplyr)
library(tidyverse)
library(DAAG)
library(lmtest)
library(sandwich)
library(plotROC)
library(glmnet)
library(interactions)
```

```{r global_options, include=FALSE}
#LEAVE THIS CHUNK ALONE!
library(plotROC)
opts_chunk$set(fig.align="center", fig.height=5, message=FALSE, warning=FALSE, fig.width=8, tidy.opts=list(width.cutoff=60),tidy=TRUE)

class_diag<-function(probs,truth){
  
  tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
  acc=sum(diag(tab))/sum(tab)
  sens=tab[2,2]/colSums(tab)[2]
  spec=tab[1,1]/colSums(tab)[1]
  ppv=tab[2,2]/rowSums(tab)[2]

  if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
  
  #CALCULATE EXACT AUC
  ord<-order(probs, decreasing=TRUE)
  probs <- probs[ord]; truth <- truth[ord]
  
  TPR=cumsum(truth)/max(1,sum(truth)) 
  FPR=cumsum(!truth)/max(1,sum(!truth))
  
  dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
  TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
  
  n <- length(TPR)
  auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )

  data.frame(acc,sens,spec,ppv,auc)
}
```

# Modeling

## Instructions

A knitted R Markdown document (as a PDF) and the raw R Markdown file (as .Rmd) should both be submitted to Canvas by 11:59pm on 11/24/2019. These two documents will be graded jointly, so they must be consistent (i.e., donâ€™t change the R Markdown file without also updating the knitted document). Knit an html copy too, for later! In the .Rmd file for Project 2, you can copy the first code-chunk into your project .Rmd file to get better formatting. Notice that you can adjust the opts_chunk$set(...) above to set certain parameters if necessary to make the knitting cleaner (you can globally set the size of all plots, etc). I have gone ahead and set a few for you (such as disabling warnings and package-loading messges when knitting)! 

Like before, I envision your written text forming something of a narrative structure around your code/output. All results presented must have corresponding code. Any answers/results/plots etc. given without the corresponding R code that generated the result will not be graded. Furthermore, all code contained in your final project document should work properly. Please do not include any extraneous code or code which produces error messages. (Code which produces warnings is acceptable, as long as you understand what the warnings mean).

## Find data:

Find one dataset with at least 5 variables that wish to use to build model. At least one should be categorical (with 2-5 groups) and at least two should be numeric. Ideally, one of your variables will be binary (if not, you will need to create one by discretizing a numeric, which is workable but less than ideal). You will need a minimum of 40 observations (*at least* 10 observations for every explanatory variable you have, ideally 20+ observations/variable).

## Guidelines and Rubrc

- **0. (5 pts)** Introduce your dataset and each of your variables (or just your main variables if you have lots) in a paragraph.

```{r}
hurricane<-DAAG::hurricNamed
select <- dplyr::select
hurricane<-hurricane%>%select(-c("BaseDamage","firstLF","AffectedStates","LF.times"))%>%na.omit()
hurricane <- hurricane %>% mutate(Category=cut(LF.WindsMPH, breaks=c(-Inf,74, 95, 110, 129,156,Inf), labels=c("Trop_Storm","One","Two","Three","Four","Five")))
```

*The dataset I have chosen is from the `DAAG` package, and it is called hurricNamed. This dataset consists of 94 observations of 11 different variables about the named hurricanes that actually made it to the US from the years of 1950 to 2012. The variables I will be using for this project are the gender of the name, the maximum sustained windspeed, the atmospheric pressure at landfall, the property damage in millions of US dollars (adjusted to 2014 inflation level for consistency), the damage that accured (had the hurricane hit the US in 2014), and the number of ensuing deaths. From the details provided by the authors of this data, these data were the subject of a paper that asserted that female-named hurricanes caused more damage than male-named hurricanes due to people taking the female-named hurricanes with less seriousness. This is quite the assertion, and I would like to find if this is actually correct. Immediately off the bat, I converted the windspeed data into the actual categories of the hurricanes with wind measurements provided by the NOAA National Hurricane Center. This not only provides a categorical variable to work with in this project, but it also puts the hurricanes' power into perspective (people are more familiar with categories than with raw windspeeds).*

- **1. (15 pts)** Perform a MANOVA testing whether any of your numeric variables (or a subset of them, if including them all doesn't make sense) show a mean difference across levels of one of your categorical variables (3). If they do, perform univariate ANOVAs to find response(s) showing a mean difference across groups (3), and perform post-hoc t tests to find which groups differ (3). Discuss the number of tests you have performed, calculate the probability of at least one type I error (if unadjusted), and adjust the significance level accordingly (bonferroni correction) before discussing significant differences (3). Briefly discuss assumptions and whether or not they are likely to have been met (2).

```{r}
man1<-manova(cbind(deaths,LF.PressureMB,NDAM2014,BaseDam2014)~Category, data=hurricane); summary(man1)
summary.aov(man1)

pairwise.t.test(hurricane$deaths, hurricane$Category, p.adj = "none")
pairwise.t.test(hurricane$LF.PressureMB, hurricane$Category, p.adj = "none")
pairwise.t.test(hurricane$NDAM2014, hurricane$Category, p.adj = "none")
pairwise.t.test(hurricane$BaseDam2014, hurricane$Category, p.adj = "none")

#Checking probability of Type 1 Error
1-(.95^4)
0.05/21

pairwise.t.test(hurricane$deaths, hurricane$Category, p.adj = "bonf")
pairwise.t.test(hurricane$LF.PressureMB, hurricane$Category, p.adj = "bonf")
pairwise.t.test(hurricane$NDAM2014, hurricane$Category, p.adj = "bonf")
pairwise.t.test(hurricane$BaseDam2014, hurricane$Category, p.adj = "bonf")
```
*Overall, I am running tests with 4 different numeric variables (deaths,LF.PressureMB,NDAM2014, and BaseDam2014) against the categorical variable I have chosen, which is the category of the hurricanes. From the results of the MANOVA, there are significant differences between hurricane categories for all 5 different variables (Pillai=1.1346, pseudo f-val(20,352)= 6.969, p-val=2.481e-16). From the summary.aov of the MANOVA, it appears that the landfall pressure readings, the number of landfalls, and the damage each hurricane did (if it had appeared in 2014) all significantly differ by category type (LF.Pressure: F-Val=61.878,p-val=2.2e-16; NDAM2014: F-val=9.457,p-val=2.038e-06). I have done 21 hypothesis tests total (1 MANOVA, 4 ANOVA, 16T). The probability of having made a type 1 error is ~18.5% which is quite high. That means that the Bonferroni Adjustment to assure the type 1 error rate stays at 0.05 is 0.05/21, which is 0.002380952. After the Bonferroni adjustment, it does not appear that the significance of these elements changes to become unsignificant.*

- **2. (10 pts)** Perform some kind of randomization test on your data (that makes sense). This can be anything you want! State null and alternative hypotheses, perform the test, and interpret the results (7). Create a plot visualizing the null distribution and the test statistic (3).

```{r}
hurricane%>%group_by(mf)%>%summarize(m=mean(LF.WindsMPH))%>%summarize(diff(m))
hurricane$mf%>%as.factor()

rand_dist<-vector()
for(i in 1:5000){
new<-data.frame(windspeed=sample(hurricane$LF.WindsMPH),mf=hurricane$mf) 
rand_dist[i]<-mean(new[new$mf=="m",]$windspeed)-mean(new[new$mf=="f",]$windspeed)
}

mean(rand_dist< -3.203125)*2 #pvalue

t.test(data=hurricane,LF.WindsMPH~mf)

{hist(rand_dist,main="",ylab=""); abline(v = -3.203125,col="red")}
```
*Here, the permutation test I used is the Monte Carlo permutation on the standard deviations of the windspeed data from this dataset. Here, the null hypothesis is that the mean windspeed is the same for female named hurricanes and male named hurricanes. The alternative hypothesis is that the mean windspeeds are different between male and female named hurricanes. The p-value received from this test is 0.5012, which means that the null hypothesis is not rejeced, and it looks like there isn't a difference in windspeeds between male and female named hurricanes (which is a logical conclusion).*

- **3. (35 pts)** Build a linear regression model predicting one of your response variables from at least 2 other variables, including their interaction. Mean-center any numeric variables involved in the interaction.

```{r}
hurricane$damage_c<-hurricane$BaseDam2014-mean(hurricane$BaseDam2014)
hurricane$wind_c<-hurricane$LF.WindsMPH-mean(hurricane$LF.WindsMPH)
hurricane$pressure_c<-hurricane$LF.PressureMB-mean(hurricane$LF.PressureMB)

fit1<-lm(deaths ~ damage_c * pressure_c, data=hurricane);summary(fit1)
```

    - Interpret the coefficient estimates (do not discuss significance) (10)
  *From this linear regression, there were some very interesting results from predicting the number of deaths from damages done and landfall atmospheric pressures of the hurricanes in this dataset. While controlling for landfall atmospheric pressure, the damages done explain a significant amount of the variation in resulting deaths. For every one point increase in damages, there is a -5.189e-03 increase in resulting deaths. While controlling for damages done, the landfall atmospheric pressures of each hurricane do  explain a significant amount of the variation in resulting deaths. Here, for every one unit increase in pressure, there is a -1.801 decrease in death rates. This is due to the fact that lower atmospheric pressures make hurricanes more powerful (or any storm for that matter), so as pressure increases, there are lower deaths. And finally, for the interaction, the effect of damage on death rates is not the same across the different levels of atmospheric pressure (t-val=-8.154, p-val=1.96e-12). For every unit increase in damages across levels of atmospheric pressure, there is a corresponding decrease of -4.750e-04 in resulting deaths.*
      
    - Plot the regression using `ggplot()`. If your interaction is numeric by numeric, refer to code near the end of WS15 to make the plot. If you have 3 or more predictors, just chose two to plot for convenience. (7)
```{r}
library(interactions)
interact_plot(fit1,damage_c,pressure_c)
```
    - Check assumptions of linearity, normality, and homoskedasticity either graphically or using a hypothesis test (3)
```{r}
resids<-fit1$residuals; fitvals<-fit1$fitted.values
ggplot()+geom_point(aes(fitvals,resids))+geom_hline(yintercept=0, col="red")

ggplot()+geom_histogram(aes(resids),bins=20)

ggplot()+geom_qq(aes(sample=resids))+geom_qq_line(aes(sample=resids), color='red')
```
*This data does not seem to exhibit homoskedasticity or normality. However, linearity seems to be upheld.*
```{r}
shapiro.test(resids)
```
*Shapiro-Wilk's test has a signifiant p-value, so it means that the normality assumption is violated and the data are not normaly distributed.*
```{r}
bptest(fit1)
```
*The Breusch-Pagan test gave a p-value of 5.259e-05 which is significant. This means that the null hypothesis of homoskedasticity is rejected and heteroskedasticity is assumed. The regression should be redone using heteroskedasticity robust SEs to adjust for heteroskedasticity and to be able to use this linear regression model.*

    - Regardless, recompute regression results with robust standard errors via `coeftest(..., vcov=vcovHC(...))`. Discuss significance of results, including any changes from before/after robust SEs if applicable. (7)
```{r}
coeftest(fit1)[,1:2]
coeftest(fit1, vcov=vcovHC(fit1))[,1:2]
```
*From the normal-theory SEs from this linear regression, the significant effects on deaths are damages and the interaction of damages and pressure. After recomputing the regression results with robust standard errors, there were no changes in significance of the variables used. The only notable change was the interaction becoming a little bit less significant.* 

    - What proportion of the variation in the outcome does your model explain? (3)
```{r}
(sum((deaths-mean(deaths))^2)-sum(fit1$residuals^2))/sum((deaths-mean(deaths))^2)
```
*The proportion of the variation in the outcome that the model explains is 0.9719109. The R-squared value from the `fit1` regression is 0.7912 (adjusted R-squared = 0.7842).*    


- **4. (5 pts)** Rerun same regression model (with interaction), but this time compute bootstrapped standard errors. Discuss any changes you observe in SEs and p-values using these SEs compared to the original SEs and the robust SEs)
```{r}
fit1<-lm(deaths ~ damage_c * pressure_c, data=hurricane);summary(fit1)
samp_distn<-replicate(5000, {
  boot_dat<-boot_dat<-hurricane[sample(nrow(hurricane),replace=TRUE),]
  fit<-lm(deaths ~ damage_c * pressure_c, data=boot_dat)
  coef(fit)
})
samp_distn%>%t%>%as.data.frame%>%summarize_all(sd)
```
**

- **5. (40 pts)** Perform a logistic regression predicting a binary categorical variable (if you don't have one, make/get one) from at least two explanatory variables (interaction not necessary). 
```{r}
hurricane <- hurricane %>% mutate(mf = ifelse(mf == "f", 1, 0))
hurricane$mf<-as.factor(hurricane$mf)

fit2<-glm(mf~deaths+BaseDam2014, data=hurricane,family="binomial");summary(fit2)
```
*For my binary variable, I had to create one, but it wasn't a far stretch. I took the original "mf" variable that gives the gender of the names of these hurricanes and changed the female names to a "1" and the male names to a "0".*

    - Interpret coefficient estimates in context (10)
*The variables used for this logistic regression are property damages and deaths. None of my variables came out as significant for explaining variation in "mf". Controlling for property damages, deaths do not explain variation in mf. Controlling for deaths, property damages do not explain variation in mf (although it was close to being significant- p = 0.07944081).*

    - Report a confusion matrix for your logistic regression (2)
```{r}
hurricane$prob<-predict(fit2,type="response")
table(predict=as.numeric(hurricane$prob>.5),truth=hurricane$mf)%>%addmargins
```
   
    - Compute and discuss the Accuracy, Sensitivity (TPR), Specificity (TNR), and Recall (PPV) of your model (5)
```{r}
class_diag(hurricane$prob,hurricane$mf)
```
*For this logistic regression model, the accuracy is 0.7021277, the sensitivity is 0.984375, the specificity is 0.1, and the recall is 0.7. The Sensitivity of the model is the true positive rate, which is the number of correct female name predictions divided by the total number of female named hurricanes. Since the best sens is 1.0, 0.984375 is pretty good. Specificity is the true negative rate, and this is the correct male name predictions divided by the total number of male named hurricanes. The best value for this is also 1.0, and with a reported spec of 0.1, this is remarkably low. The ppv (positive predictive value) is the number of correct female named hurricane predictions divided by the total number of female named hurricane predictions. With a top value of 1.0 for ppv, the reported ppv of 0.7 is alright.*

    - Using ggplot, plot density of log-odds (logit) by your binary outcome variable (3)
```{r}
pca1<-princomp(hurricane[c('BaseDam2014','deaths')])
hurricane$predictor<-pca1$scores[,1]

fit_logit<-glm(mf~predictor,data=hurricane,family="binomial")
hurricane$prob5<-predict(fit_logit,type="response")

ggplot(hurricane, aes(predictor,prob5)) +
  geom_jitter(aes(color=mf),alpha=.5,size=3) +
  geom_rug(aes(color=mf),sides="right")
```
   
    - Generate an ROC curve (plot) and calculate AUC (either manually or with a package); interpret (10)
```{r}
tpr<-function(p)mean(hurricane[hurricane$mf==1,]$prob>p)
fpr<-function(p)mean(hurricane[hurricane$mf==0,]$prob>p)
data<-hurricane[order(hurricane$prob),]
prob<-hurricane$prob
cuts<-unique(c(0,(prob[-1]+prob[-32])/2,1))
TPR<-sapply(cuts,tpr)
FPR<-sapply(cuts,fpr)
ROC1<-
  data.frame(cuts,TPR,FPR,TP=TPR*13,FP=FPR*19)%>%
  arrange(desc(cuts))
ggplot(ROC1)+geom_path(aes(FPR,TPR),size=1.5)+geom_segment(aes(x=0,y=0,xend=1,yend=1),lty=2)+
  scale_x_continuous(limits = c(0,1))

widths<-diff(ROC1$FPR)
heights<-(ROC1$TPR[-1]+ROC1$TPR[-length(ROC1$TPR)])/2
AUC<-sum(heights*widths)
AUC
```
*The AUC of this model is 0.603125 which is low. From the above ROC plot, the AUC is quite low, which means that this model is much closer to a "chance prediction" (AUC value of 0.5) as opposed to a "perfect prediction" (AUC value of 1.0). This can be interpreted as the probability that a randomly selected hurricane with a female name has about the same prediction as a randomly selected hurricane with a male name. These findings are quite anti-climactic as I was looking to find variation here, but it's completely understandable as hurricanes are arbitrarily named far before they reach the US and cause severe damage. It would be silly to think the name has any effect on property damage levels or death levels, but I was looking at this for fun! (A small "what if..." went through my mind when performing this logistic regression and analysis)*  

    - Perform 10-fold (or repeated random sub-sampling) CV and report average out-of-sample Accuracy, Sensitivity, and Recall (10)
```{r}
set.seed(1234)
k=10 
data1<-hurricane[sample(nrow(hurricane)),] 
folds<-cut(seq(1:nrow(hurricane)),breaks=k,labels=F) 
diags<-NULL
for(i in 1:k){

  train<-data1[folds!=i,]
  test<-data1[folds==i,]
  truth<-test$mf

  fit<-glm(mf~deaths+BaseDam2014,data=train,family="binomial")
  probs<-predict(fit,newdata = test,type="response")

  diags<-rbind(diags,class_diag(probs,truth))
}

apply(diags,2,mean)
```
*For this 10-fold CV that was performed above, the average out-of-sample stats to report are: Accuracy = 0.68444444, Sensitivity = 0.97321429, and PPV (Recall) = 0.69250000.*

- **6. (10 pts)** Choose one variable you want to predict (can be one you used from before; either binary or continuous) and run a LASSO regression inputting all the rest of your variables as predictors. Choose lambda to give the simplest model whose accuracy is near that of the best (i.e., `lambda.1se`). Discuss which variables are retained. Perform 10-fold CV using this model: if response in binary, compare model's out-of-sample accuracy to that of your logistic regression in part 5; if response is numeric, compare the residual standard error (at the bottom of the summary output, aka RMSE): lower is better fit!
```{r}
hurricane6<-hurricane%>%select(-c(Name,Year,damage_c,pressure_c,wind_c,prob,Category,mf))%>%na.omit()
hurricane6$LF.WindsMPH%>%as.numeric()
hurricane6$LF.PressureMB%>%as.numeric()
hurricane6$deaths%>%as.numeric()

y <- as.matrix(hurricane$NDAM2014)
x <- hurricane6%>%dplyr::select(-NDAM2014) %>% mutate_all(scale) %>% 
  as.matrix
cv <- cv.glmnet(x, y)
lasso1 <- glmnet(x, y, lambda = cv$lambda.1se)

coef(lasso1)

set.seed(1234)
k=10 
data1<-hurricane[sample(nrow(hurricane)),] 
folds<-cut(seq(1:nrow(hurricane)),breaks=k,labels=F) 
diags<-NULL
for(i in 1:k){

  train<-data1[folds!=i,]
  test<-data1[folds==i,]
  truth<-test$NDAM2014

  fit<-lm(NDAM2014~LF.WindsMPH+LF.PressureMB+BaseDam2014,data=train)
  probs<-predict(fit,newdata = test,type="response")

  diags<-rbind(diags,class_diag(probs,truth))
}

apply(diags,2,mean)

fit6<-lm(NDAM2014~LF.WindsMPH+LF.PressureMB+BaseDam2014,data=train);summary(fit6)


```
*From running the LASSO regression, the variables that are retained are windspeeds (LF.WindsMPH), atmospheric pressure (LF.PressureMB), and the property damages (BaseDam2014). Unfortunately, because I used a numeric variable in the regression, I'm not sure how to compare RMSEs to find how well it ended up fitting.*

...
