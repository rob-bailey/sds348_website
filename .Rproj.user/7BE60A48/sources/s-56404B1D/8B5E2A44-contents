library(boot) 
install.packages("boot")
data(urine)
urine<-na.omit(urine)
urine<-urine%>%mutate_at(-1,function(x)x-mean(x))

table(predict=as.numeric(urine$r>.1),truth=urine$r)%>%addmargins
33/77

fit<-glm(r~(.)^2,data=urine,family=binomial);summary(fit)$coef
prob<-predict(fit,type="response")

#urine<-urine%>%select(-prob)


class_diag<-function(probs,truth){
  
  tab<-table(factor(probs>.5,levels=c("FALSE","TRUE")),truth)
  acc=sum(diag(tab))/sum(tab)
  sens=tab[2,2]/colSums(tab)[2]
  spec=tab[1,1]/colSums(tab)[1]
  ppv=tab[2,2]/rowSums(tab)[2]
  
  if(is.numeric(truth)==FALSE & is.logical(truth)==FALSE) truth<-as.numeric(truth)-1
  
  #CALCULATE EXACT AUC
  ord<-order(probs, decreasing=TRUE)
  probs <- probs[ord]; truth <- truth[ord]
  
  TPR=cumsum(truth)/max(1,sum(truth)) 
  FPR=cumsum(!truth)/max(1,sum(!truth))
  
  dup<-c(probs[-1]>=probs[-length(probs)], FALSE)
  TPR<-c(0,TPR[!dup],1); FPR<-c(0,FPR[!dup],1)
  
  n <- length(TPR)
  auc<- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) )
  
  data.frame(acc,sens,spec,ppv,auc)
}
auc(urine$r,prob)
class_diag(prob,urine$r)


######### CV

set.seed(1234)
k=10

data1<-urine[sample(nrow(urine)),] #put dataset in random order
folds<-cut(seq(1:nrow(urine)),breaks=k,labels=F) #create folds

diags<-NULL
for(i in 1:k){ # FOR EACH OF 10 FOLDS
  train<-data1[folds!=i,] #CREATE TRAINING SET
  test<-data1[folds==i,] #CREATE TESTING SET
  truth<-test$r
  
  fit<- glm(r~(.)^2,data=train,family=binomial);summary(fit)
    probs<- predict(fit,test,type="response")
      
      diags<-rbind(diags,class_diag(probs,truth)) 
}

apply(diags,2,mean) #AVERAGE THE DIAGNOSTICS ACROSS THE 10 FOLDS



######### CV

set.seed(1234)
k=10

data1<-urine[sample(nrow(urine)),] #put dataset in random order
folds<-cut(seq(1:nrow(urine)),breaks=k,labels=F) #create folds

diags<-NULL
for(i in 1:k){ # FOR EACH OF 10 FOLDS
  train<-data1[folds!=i,] #CREATE TRAINING SET
  test<-data1[folds==i,] #CREATE TESTING SET
  truth<-test$r
  
  fit<- glm(r~.,data=train,family=binomial);summary(fit)
  probs<- predict(fit,test,type="response")
  
  diags<-rbind(diags,class_diag(probs,truth)) 
}

apply(diags,2,mean) #AVERAGE THE DIAGNOSTICS ACROSS THE 10 FOLDS


#install.packages("glmnet")
#library(glmnet)
urine1<-urine%>%na.omit()%>%as.matrix()
cv.lasso1<-cv.glmnet(x=urine1[,-1],y=urine1[,1],family="binomial")
lasso1<-glmnet(x=urine1[,-1],y=urine1[,1],family="binomial",alpha=1,lambda=cv.lasso1$lambda.1se)
coef(lasso1)




######### CV

set.seed(1234)
k=10

data1<-lasso1[sample(nrow(lasso1)),] #put dataset in random order
folds<-cut(seq(1:nrow(lasso1)),breaks=k,labels=F) #create folds

diags<-NULL
for(i in 1:k){ # FOR EACH OF 10 FOLDS
  train<-data1[folds!=i,] #CREATE TRAINING SET
  test<-data1[folds==i,] #CREATE TESTING SET
  truth<-test$r
  
  fit<- glm(r~gravity+cond+calc,data=train,family=binomial)
  probs<- predict(fit,newdata=test,type="response")
  
  diags<-rbind(diags,class_diag(probs,truth)) 
}

apply(diags,2,mean) #AVERAGE THE DIAGNOSTICS ACROSS THE 10 FOLDS
